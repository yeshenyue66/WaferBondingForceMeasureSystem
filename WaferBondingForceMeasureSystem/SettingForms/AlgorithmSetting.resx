<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PicBoxSysSettingClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>